name: Auto Release (Main)
on:
  push:
    branches: [ "main" ]
    
jobs:
  # Release APK 생성
  apk:
    permissions: write-all
    name: Generate APK
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle

      # Generate Keystore File
      - name: Generate Keystore File
        env:
          KEY_STORE: ${{ secrets.APP_KEYSTORE_BASE64 }}
        run : |
          echo $KEY_STORE > ./keystore.b64
          base64 -d -i ./keystore.b64 > ./Smiley.jks


      # Generate keystore.properties
      - name: Generate keystore.properties
        env:
          STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          STORE_FILE: ${{ secrets.STORE_FILE }}
        run: |
          echo storePassword=$STORE_PASSWORD > ./keystore.properties
          echo keyPassword=$KEY_PASSWORD >> ./keystore.properties
          echo keyAlias=$KEY_ALIAS >> ./keystore.properties
          echo storeFile=$STORE_FILE >> ./keystore.properties

      # Kakao App Key
      - name: Access KAKAO_SDK_APPKEY
        env:
          KAKAO_SDK_APPKEY: ${{ secrets.KAKAO_SDK_APPKEY }}
        run: echo KAKAO_SDK_APPKEY=\"$KAKAO_SDK_APPKEY\" > ./local.properties

      # Release 빌드
      - name: Build Release APK
        run: bash ./gradlew assembleRelease --stacktrace

      # Release APK 추출
      - name: Upload Release APK
        uses: actions/upload-artifact@v3
        with:
          name: app-release
          path: presentation/build/outputs/apk/release

      # merge commit에서 release 버전 정보 추출
      - name: 버전 정보 추출
        run: echo "##[set-output name=version;]$(echo '${{ github.event.head_commit.message }}' | egrep -o '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}')"
        id: extract_version_name

      # Release/Tag 생성
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with: 
          tag_name: ${{ steps.extract_version_name.outputs.version }}
          release_name: ${{ steps.extract_version_name.outputs.version }}
          body: |
            ## v${{ steps.extract_version_name.outputs.version }} 정식 버전이 릴리즈 되었습니다.
            - Apk 다운로드 -> [Apk Downloads](https://github.com/DEU-Smiley/Smiley-Android-App/releases/download/0.0.3/app-release.apk) 
            - Apk는 위의 링크 또는 해당 게시글 하단에서 다운로드 받을 수 있습니다.
            - 만약 해당 게시글에 Apk 파일이 업로드 되어 있지 않다면 아래 절차를 통해 다운로드 받아주세요.


            ### Apk 다운로드
            1. [Apk Downloads](https://github.com/DEU-Smiley/Smiley-Android-App/actions/workflows/auto_release.yml?query=is%3Asuccess+) 로 이동하세요.
            2. 목록 중 가장 최근에 완료된 항목(초록색 체크 표시)을 클릭하세요.
            3. Artifacts 탭에서 apk 파일을 다운로드 할 수 있습니다.
 
      # Release에 Apk 파일 업로드
      - name: Upload Apk to Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: presentation/build/outputs/apk/release/presentation-release.apk
          asset_name: app-release.apk
          asset_content_type: application/zip
